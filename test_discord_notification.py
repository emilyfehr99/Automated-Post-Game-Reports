"""
Test Discord Notification
Sends a test message to your Discord server
"""

import requests
import json
from datetime import datetime

def send_discord_test():
    """Send test notification to Discord"""
    
    print("üí¨ DISCORD NOTIFICATION TEST")
    print("=" * 40)
    print("To set up Discord notifications:")
    print("1. Go to your Discord server (ID: 1417616184475390034)")
    print("2. Go to Server Settings ‚Üí Integrations ‚Üí Webhooks")
    print("3. Click 'New Webhook'")
    print("4. Choose a channel (e.g., #nhl-predictions)")
    print("5. Copy the webhook URL")
    print()
    
    webhook_url = input("Enter your Discord webhook URL (or press Enter to skip): ").strip()
    
    if not webhook_url:
        print("‚ÑπÔ∏è  Skipping Discord test")
        print("\nüìù Manual setup instructions:")
        print("1. Discord server ‚Üí Server Settings ‚Üí Integrations ‚Üí Webhooks")
        print("2. New Webhook ‚Üí Choose channel ‚Üí Copy URL")
        print("3. Add to GitHub Secrets as DISCORD_WEBHOOK_URL")
        return False
    
    try:
        # Get today's predictions
        with open('daily_predictions_20251018.txt', 'r') as f:
            predictions = f.read()
        
        # Create Discord message
        message = {
            "content": "üèí **Test NHL Predictions - Today**",
            "embeds": [
                {
                    "title": "üèí Daily NHL Game Predictions",
                    "description": predictions[:2000],  # Discord limit
                    "color": 3447003,  # Blue color
                    "footer": {
                        "text": f"ü§ñ Generated by NHL Self-Learning Model ‚Ä¢ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} CT"
                    },
                    "thumbnail": {
                        "url": "https://cdn-icons-png.flaticon.com/512/3048/3048127.png"
                    }
                }
            ]
        }
        
        # Send to Discord
        response = requests.post(webhook_url, json=message)
        
        if response.status_code == 204:
            print("‚úÖ Discord notification sent successfully!")
            print("üí¨ Check your Discord server - you should see the message!")
            return True
        else:
            print(f"‚ùå Discord notification failed: {response.status_code}")
            print(response.text)
            return False
            
    except Exception as e:
        print(f"‚ùå Error sending Discord notification: {e}")
        return False

def main():
    """Main test function"""
    print("This will send a test notification to your Discord server.")
    print("You should see it appear in the channel you chose for the webhook.")
    print()
    
    success = send_discord_test()
    
    if success:
        print("\nüéâ SUCCESS!")
        print("Check your Discord server - you should see the NHL predictions!")
        print("If you see it, the daily notifications will work perfectly!")
    else:
        print("\nüìù To set up Discord notifications:")
        print("1. Create a webhook in your Discord server")
        print("2. Add the webhook URL to GitHub Secrets")
        print("3. The daily workflow will send predictions every morning!")

if __name__ == "__main__":
    main()
